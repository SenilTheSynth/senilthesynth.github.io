<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Sen&#39;s Blog</title>
	<subtitle>Senil&#39;s dumb ramblings.</subtitle>
	
	<link href="https://blog.senil.me/feed.xml" rel="self"/>
	<link href="https://blog.senil.me/"/>
	<updated>2024-11-24T00:00:00Z</updated>
	<id>https://blog.senil.me/</id>
	<author>
		<name>Senil</name>
		<email></email>
	</author>
	
	<entry>
		<title>Negative energy prices don&#39;t mean what you might think.</title>
		<link href="https://blog.senil.me/what-negative-energy-prices-really-mean/"/>
		<updated>2024-11-24T00:00:00Z</updated>
		<id>https://blog.senil.me/what-negative-energy-prices-really-mean/</id>
		<content type="html">&lt;p&gt;I am begging people to understand this, because this is very important and yet I feel like few people actually understand the actual truth behind “negative energy prices”. Contrary to what I see some folks (typically leftists and liberals) think, it has very little to do with capitalists being annoyed that they can’t make money. It has everything to do with how power is generated, supplied, stored, and consumed.&lt;/p&gt;
&lt;p&gt;Okay, maybe still a little bit of capitalists being angry they can’t make money, but it’s still not for the reasons you might expect.&lt;/p&gt;
&lt;p&gt;The TL;DR is that “negative energy prices” mean that supply far outstrips demand, there is no way to store the excess power, and utilities have to &lt;strong&gt;pay&lt;/strong&gt; clients - typically industrial - to spin everything they have up to full power to intentionally waste the excess energy so the demand meets the supply. Yes, waste excess energy, I am not joking.&lt;/p&gt;
&lt;p&gt;If you want, &lt;a href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#storing-energy-for-later&quot;&gt;you can jump to where I talk about storing energy, the ways we can do it, and the future I hope unfolds.&lt;/a&gt;. Otherwise, keep reading to learn what “negative energy prices” actually mean.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot; alt=&quot;Senil pointing towards the viewier, winking. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil pointing towards the viewier, winking. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;power-generation-consumption-and-grid-frequency&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#power-generation-consumption-and-grid-frequency&quot;&gt;Power generation, consumption, and grid frequency&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Both power supply and power demand tie into the fundamental required constant of the power grid - the frequency it operates at. In North America we use a 60Hz frequency, while Europe uses 50Hz. Various other regions use one frequency or the other, but the important thing is that frequency has to remain as constant as possible. Grid frequency gets measured to the thousandth of a Hertz in order to closely monitor grid behavior, and the power supply vs. power demand ratio determines how the frequency fluctuates.&lt;/p&gt;
&lt;p&gt;An excess of power supply starts to bump up the frequency, while an excess of power demand decreases it. There &lt;em&gt;are&lt;/em&gt; additional considerations such as the power factor - which is more or less a measure of how “efficient” your power transmission, distribution, and consumption is, but that’s getting into detail that isn’t relevant to “negative energy prices”. The grid is surprisingly stable, but letting the frequency drift too far away from the nominal frequency of the grid can and will cause problems. Under-frequency (demand outstripping supply) can cause a wide-scale blackout if generators cannot keep up with the load in time, while over-frequency (supply outstripping demand) forces generation to shut off ASAP, something that’s difficult for certain types of plants.&lt;/p&gt;
&lt;p&gt;Solar facilities and wind farms can adjust their output relatively quickly, &lt;em&gt;however&lt;/em&gt; it still has to be carefully timed to prevent an over-adjustment that’ll cause a serious under-frequency event, which risks that wide-scale blackout problem. And in the event that a utility (or transmission company) &lt;em&gt;can’t&lt;/em&gt; shut power off fast enough, they’re going to need to call up every resource they have to purposely waste power.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Wasting&lt;/em&gt; power is where the problem lies. There is no way around it, in a situation severe enough to cause “negative energy prices”, load-shedding has to happen as soon as possible to prevent problems while generation properly adjusts.&lt;/p&gt;
&lt;p&gt;There’s just one problem, though. Solar facilities are very sporadic in their output power.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot; alt=&quot;Senil with his hands on his head, mouth wide open in fear. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil with his hands on his head, mouth wide open in fear. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;the-unfortunate-problem-of-solar&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#the-unfortunate-problem-of-solar&quot;&gt;The unfortunate problem of solar&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Solar power is &lt;em&gt;great&lt;/em&gt;, especially as we get more efficient panels that can handle extreme heat better. But you have to pair solar power with some form of energy storage to help offset that sporadic generation - otherwise you run into a situation that California has dealt with, where they encouraged so many people to install rooftop solar (since rooftop solar alone is much cheaper than fossil fuels) &lt;strong&gt;but&lt;/strong&gt; they neglected to set up the proper energy storage capacity to handle the fluctuations in power output. Solar facilities paired with quality battery storage - long-life batteries with high capacity promises even after a decade or two - are actually &lt;em&gt;more&lt;/em&gt; expensive compared to a fossil fuel plant.&lt;/p&gt;
&lt;p&gt;(aside: that doesn’t mean we shouldn’t install them, but it’s a factor to keep in mind)&lt;/p&gt;
&lt;p&gt;And, well, because they had no way to store all of that excess energy, utilities had to beg their industrial clients to spin up all of the motors, ovens, etc. that they could in order to waste that extra power. Power that they would normally be charged for, but because the utility is desperate to load shed beyond their normal capacity (utilities have some load shedding systems of their own), they generally have no choice but to &lt;em&gt;at minimum&lt;/em&gt; pay for the cost of energy delivered to the clients they beg to waste power.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;That&lt;/strong&gt;&lt;/em&gt; is what a “negative energy price” means. It means being forced to waste power because, for some reason or other, you’re generating way too much power and can’t get rid of it fast enough. On a per kilowatt basis, power is being generated way faster than you can get rid of it. The power grid &lt;em&gt;cannot&lt;/em&gt; store power, power has to go somewhere. Trying to shove too much power onto the grid will result in that power finding its way back to where it was generated, since power has to make a complete loop somehow.&lt;/p&gt;
&lt;p&gt;Power doing that in an uncontrolled manner means faults happening on transmission or distribution lines, transformers blowing up because they’re being pushed well outside of their rated boundaries, substations going down, or generators potentially breaking because they’re getting pushed too hard - &lt;em&gt;everything&lt;/em&gt; runs at the grid’s frequency whether you like it or not, and not everything is going to be built to handle an excessive over-frequency event. Stuff can - and probably will - break.&lt;/p&gt;
&lt;p&gt;It’s very expensive to fix these things. It takes time. It means large-scale blackouts if we can’t fix it.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot; alt=&quot;Senil cracking his knuckles with flames behind him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil cracking his knuckles with flames behind him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;how-to-regulate-generation&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#how-to-regulate-generation&quot;&gt;How to regulate generation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not all forms of power generation can be quickly regulated and changed to new outputs. Nuclear is by far the easiest example of this - it’s a great source of base-load power, but it’s a pain in the ass to get it to some new power level. It takes a long time to increase or decrease a nuclear plant’s output because, well, you’re increasing or decreasing the heat generated by the radioactive material, and you &lt;em&gt;do not&lt;/em&gt; want to even think of causing a meltdown by acting too fast.&lt;/p&gt;
&lt;p&gt;Natural gas plants are able to change very, very quickly - just cut off the gas supply to certain turbine setups, or decrease the amount flowing in to cut back on the heat generated, slowing the boiling of water and thus the speed the turbines can move at. Wind and solar can also change very quickly, but by nature their output is less predictable. Sometimes you can have a good idea as to how much power they’ll make, othertimes you just have to hope you’re right and can spin things up or down fast enough to compensate.&lt;/p&gt;
&lt;p&gt;For hopefully obvious reasons, the quickest way to guarantee power gets changed quickly is via natural gas facilities. But we &lt;em&gt;need&lt;/em&gt; to phase them out as fast as possible across the world in order to cut down on greenhouse gas emissions - plus, y’know, we don’t have infinite natural gas. So solar and wind renewables end up taking their place. But that means needing to install some sort of energy storage, either on-site or at dedicated facilities, in order to regulate their power output to better match the demand needed of them.&lt;/p&gt;
&lt;p&gt;So… how can we do that?&lt;/p&gt;
&lt;h2 id=&quot;storing-energy-for-later&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#storing-energy-for-later&quot;&gt;Storing energy for later&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot; alt=&quot;Senil lying face-down on the ground, with a low battery symbol above him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil lying face-down on the ground, with a low battery symbol above him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&quot;batteries&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#batteries&quot;&gt;Batteries&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There’s the immediately obvious solution to storing energy - just install batteries, silly! And you’re right, standard batteries are a &lt;em&gt;great&lt;/em&gt; way to store energy. However, pretty much everything on the power grid is expected to last decades, so whatever battery system you use needs to be able to retain the vast majority of its capacity after at least a decade, preferably even longer. Fortunately, there are new battery chemistries that are available today, or will be available soon, that are substantially more stable and handle charge/discharge cycles better than older chemistries.&lt;/p&gt;
&lt;p&gt;The current hotness when it comes to stable batteries with long shelf lives are lithium-iron phosphate, usually just referred to as LiFePo. They currently have a worse energy density compared to traditional lithium-ion polymer (usually referred to as LiPo), however they trade that raw energy density for a much better “shelf life” in a way, with 80% capacities quoted after ten years. It’s still a new chemistry, so we’ll have to wait and see if that claim holds true in the real world. Oh, and LiFePo batteries generally don’t need materials such as cobalt, which is difficult to source anywhere outside of the Congo, and cobalt is… not a conflict-free material, with mining of it being extremely manual labor intensive on the locals. Expect LiFePo to show up more in large packs, such as EV’s, too.&lt;/p&gt;
&lt;p&gt;There also exist a variety of &lt;em&gt;sodium-ion&lt;/em&gt; batteries, too, that are gaining interest. To my knowledge they aren’t remotely as common as lithium-based batteries, but their properties are similar enough to lithium-based chemistries. The use of rechargeable sodium-based chemistries is extremely recent, however we’ll likely see it proliferate over time, too.&lt;/p&gt;
&lt;h3 id=&quot;pumped-hydro&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#pumped-hydro&quot;&gt;Pumped Hydro&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;But batteries aren’t the only way to store energy. We can store energy in the form of gravitational potential by holding some material of some kind higher than some other location. Well, that’s energy we could store by pushing something higher up, and get back by letting it fall down and spin a turbine in some form. The way we currently know how to do - and have done for well over a century know - is pumped hydro.&lt;/p&gt;
&lt;p&gt;The idea is relatively straightforward, though difficult to implement. Find two conveniently placed lakes, and set up a hydro facility at the lower one, running the usual tubes and piping from top to bottom. This way, you can generate power by “pulling” water from the higher lake, using its potential energy to convert into electrical energy from its kinetic energy going past the hydro turbines. A pumped hydro facility will &lt;em&gt;usually&lt;/em&gt; do this during the day, selling power when it’s needed more. And then, when power demand is lower, a pumped hydro facility will then buy power back in order to shove water from the lower lake back up to the higher lake for future use the next day.&lt;/p&gt;
&lt;p&gt;This system is remarkably simple and effective - it’s more or less a glorified hydro plant, just with the need to set up a way to push the water back up the hill. While I have no experience with a pumped hydro plant, one way you &lt;em&gt;might&lt;/em&gt; be able to accomplish the “pump water back up the hill” would be to use the very same generators used when the water flows downhill, which is possible because of one neat trick. Generators and motors are the exact same thing, just wired the other way around.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot; alt=&quot;Senil dazed and drooling, with a loading icon above him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil dazed and drooling, with a loading icon above him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;If you could change the wiring on the fly (letting the generator safely stop before doing becoming a motor, and vice versa), you could theoretically use that generator to push water back up to the higher lake. The generator-slash-motor would need to be powerful enough to accomplish such a feat, so it’s probably more realistic to just have a separate pump system. It’d cost more, but it also means you don’t need to spend more on a generator that’ll be strong enough when used as a motor, let alone install it in the right place.&lt;/p&gt;
&lt;p&gt;Pumped hydro does have a fundamental flaw, though, and one you might have figured out by now. You need convienient locations to install such a system. Two lakes that are large enough, with enough of a height difference to give a substantial amount of potential energy, and close enough to minimize material costs. Sure, you &lt;em&gt;could&lt;/em&gt; terraform to create artifical lakes to do this, but that’s pretty damn expensive just to use pumped hydro instead of batteries.&lt;/p&gt;
&lt;h3 id=&quot;that-weird-crane-thing&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#that-weird-crane-thing&quot;&gt;That weird crane thing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There’s been an idea for years now that works effectively the same as pumped hydro - lift some stuff up high enough to store substantial potential energy when power is cheap, and carefully lower them down to spin a generator when power is needed. These designs typically work by lifting and stacking concrete blocks, but there’s some flaws with this system in my eyes.&lt;/p&gt;
&lt;p&gt;First of which being that you lose out on potential energy if you can’t stack enough blocks safely. You only get the maximum potential energy when you can stack multiple blocks at the highest defined limit, while pumped hydro gives roughly the same potential energy throughout. There’s also of course the risk of breaking the concrete blocks, either from the crane being too rough with them, a storm potentially knocking the higher-up ones down, or the blocks just wearing down with time.&lt;/p&gt;
&lt;p&gt;As far as I’m aware, this idea hasn’t actually been installed in the field, only tested by various researchers and companies to determine viability. With battery banks becoming cheaper over time, I personally don’t see this weird crane idea coming to fruition and being installed grid-scale just to avoid batteries. To me, it feels far too risky and with not enough reward compared to any pumped hydro facility, let alone a dedicated battery facility.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/SadSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/SadSenil.png&quot; alt=&quot;Senil curled into a ball, crying. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil curled into a ball, crying. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;where-does-this-leave-us&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/what-negative-energy-prices-really-mean/#where-does-this-leave-us&quot;&gt;Where does this leave us?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ultimately, the inabilty to store enough energy causes problems with the grid. We cannot just install renewables without considering this factor, unless we collectively accept that wasting potentially tons of excess energy is worth the effort to install a ton of solar without any way to store power (even on-site). This inability is part of why I dislike rooftop solar if it’s not paired with an on-site battery system, because unless the solar panels are prevented from feeding power to the grid, utilities have this extra generation that they might not know what to do with.&lt;/p&gt;
&lt;p&gt;One individual home isn’t going to make much of a difference, but thousands of homes with a couple kilowatts of solar panels starts to become a problem.&lt;/p&gt;
&lt;p&gt;I want us to learn from the past and prepare for the future. Electrification is only going to continue, and we should prioritize minimizing our need for electricity in the first place too. Installing heat pumps to move more energy than it takes to run them. Building out quality electric-powered public transit in urban areas that cuts down on the need for EV’s in urban areas in the first place.&lt;/p&gt;
&lt;p&gt;And I want folks to read past the god-damn headlines, read the articles and studies, and not make wild conclusions without knowing what the hell they’re talking about. Hell, most of this is me shooting from the hip too, I don’t expect you to believe me or trust my input. I just hope some folks take something away from this long as hell post.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>My experience with Iceshrimp.JS</title>
		<link href="https://blog.senil.me/my-time-with-iceshrimp/"/>
		<updated>2024-11-02T00:00:00Z</updated>
		<id>https://blog.senil.me/my-time-with-iceshrimp/</id>
		<content type="html">&lt;p&gt;Earlier this year - technically late last year into early this year, I was trialing the fediverse software known as &lt;a href=&quot;https://iceshrimp.dev/iceshrimp/iceshrimp&quot;&gt;Iceshrimp&lt;/a&gt;, lovingly marketed as “YAMF - Yet Another Misskey Fork”, because it is (there’s a joke that there’s new Misskey forks every week). They’re actually in the middle of re-writing Iceshrimp to use dotNET instead of Javascript, which will hopefully boost performance down the line. Though, Iceshrimp dotNET was nowhere near “production” stable when I tried it, but I want to give it a go once it gets more polished.&lt;/p&gt;
&lt;h2 id=&quot;what-i-loved-about-it&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#what-i-loved-about-it&quot;&gt;What I loved about it&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/HeartSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/HeartSenil.png&quot; alt=&quot;Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I know people rag on Misskey being bloated, and yeah there’s definitely a ton of features I didn’t care for, or felt were too similar to each other to make it clear what each was used for - let alone some features don’t even &lt;em&gt;federate&lt;/em&gt; outside of the server, and this was just for me so they were 100% pointless. But Iceshrimp has a &lt;em&gt;lot&lt;/em&gt; of nice quality-of-life features that I made use of.&lt;/p&gt;
&lt;h3 id=&quot;the-drive-system&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#the-drive-system&quot;&gt;The drive system&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead of uploading images, videos, audio, etc. every single time you share something - say, you share furry stickers now and then because they’re fun and personalized reaction images in a way - everything gets uploaded to a user drive that you have full access to, and you share files via that system instead. I mostly appreciated this for alt-text purposes, since I no longer had to remember to add alt-text every single time I wanted to use a sticker, and could make sure that stuff was captioned in similar ways for consistency. Before I pulled that VPS offline (finally), I would regularly refer back to the files in Iceshrimp whenever I uploaded a sticker.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(aside: I’ve literally created a file in the source for this site that solely acts as a way to track the captions for the stickers I use, so that way I can keep them consistent post-to-post and not have to dig through blog posts to find where I used one.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I wish I could embed alt-text into image, video, etc. metadata so that way I could upload something anywhere and it’d always have the alt-text set up on the service itself, instead of me having to remember every time how to caption it.&lt;/p&gt;
&lt;p&gt;Another thing I like about the drive system? It makes sizing S3 buckets for user-uploaded media straightforward. You can expect to pay for, at most, roughly some amount of money per amount of users at maximum - assuming everyone’s drives are totally filled up. Of course, you’ll probably never hit that amount, but it’s a convenient way to budget storage space and whatnot. When I was looking as using DigitalOcean Spaces, and a 5GB drive size, that comes out to about fifty users per 250GB slice Spaces offers - a neat $5 a month, outbound traffic partly included.&lt;/p&gt;
&lt;h3 id=&quot;the-bubble-timeline&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#the-bubble-timeline&quot;&gt;The bubble timeline&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This might be something Mastodon, Pleroma, Akkoma, etc. support, but I know for fact Iceshrimp (and Sharkey, maybe other Misskey forks too) have what’s called the “bubble” timeline. This is like the full federated timeline, but only to specific instances that the admins deem “worth” putting into a special timeline. I think this is SUPER handy when it comes to an instance that federates very broadly - giving users a lil selection of known safe instances is a nice touch.&lt;/p&gt;
&lt;p&gt;I think it’s a clever way to shrink down the mess that would be the firehose federated timeline into a normal hose of curated instances.&lt;/p&gt;
&lt;h3 id=&quot;baked-in-translation-hookups&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#baked-in-translation-hookups&quot;&gt;Baked-in translation hookups&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Being able to read posts made by people speaking in their native tongue is, to me, important. No translation service is perfect, but it’s very nice to at least be able to see what’s being talked about. Iceshrimp includs support for two translation services that link up &lt;em&gt;directly&lt;/em&gt; to Iceshrimp (unlike Bluesky right now, which just shoves you to a Google Translate webpage) - LibreTranslate and DeepL. &lt;a href=&quot;https://libretranslate.com/&quot;&gt;LibreTranslate&lt;/a&gt; is open source under GNU A-GPL 3.0, and - importantly to me - &lt;em&gt;can be self-hosted&lt;/em&gt;, which means no paying API costs to some other company, or figuring out some way to bypass the costs. &lt;a href=&quot;https://www.deepl.com/&quot;&gt;DeepL&lt;/a&gt; is commercial and costs money once you go beyond 500,000 characters a month, but it has better language support, and translation isn’t dependent on whatever runs your self-hosted setup working, too.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot; alt=&quot;Senil happily tossing confetti in the air. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil happily tossing confetti in the air. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Ultimately, though, I just appreciated being able to hit a button and see a post translated from one language into mine &lt;em&gt;mostly&lt;/em&gt; intact, given the inherent limits of machine translation. Plus, it pretty much always worked compared to X’s Google Translate API, which would occasionaly go “nope, can’t translate this!” even though it’s CLEARLY not in English - and I imagine that happened for folks who speak anything but English and tried to translate from English, too. Mastodon currently only supports DeepL - which is better than &lt;em&gt;no translation option at all&lt;/em&gt; - but I don’t know how many instances bother with hooking it up.&lt;/p&gt;
&lt;p&gt;And since DeepL has the whole “you might have to pay at some point” risk for instance admins and operators, I wouldn’t be surprised if the lack of baked-in DeepL translation continues.&lt;/p&gt;
&lt;h3 id=&quot;quote-posts-and-reactions&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#quote-posts-and-reactions&quot;&gt;Quote posts AND reactions!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Quote posts are a sticking point on the fediverse, for a variety of reasons, but chief among them is that quote posts could enable harassment and targeting of users by enabling folks to easily dunk on The Main Character Of Today. Folks can still do this, though, by just copying a link and pasting it into their post, which (in my eyes) is actually &lt;em&gt;worse&lt;/em&gt; because it means you have no way of knowing how folks on other instances are responding to you. Potentially making it harder to retroactively protect a user from getting harassed because people are coordinating on a separate instance.&lt;/p&gt;
&lt;p&gt;But a built-in quote system, &lt;em&gt;to me&lt;/em&gt;, is perfect. Both because “quoting posts is part of making something that Feels Like Twitter but Fediverse”, but also because it makes it easier to respond to a post in a tangential manner. I’ve done this a few times with my fake quotes that link back to the original post, but having a “native” solution makes it much easier to work with. Also, folks will quote posts with a content warning if the original post doesn’t have one that they think it should have, and “make it easy to do this process” makes it easier for folks to do that. Iceshrimp - really, most fediverse software EXCEPT for Mastodon - support quote posts in some form or another.&lt;/p&gt;
&lt;p&gt;Reactions are just fun because they’re a fun way to respond to posts - instead of just liking something, you can send a reaction that might better convey your response, instead of replying with a single emoji. They still show up &lt;em&gt;as&lt;/em&gt; likes/favorites on your profile, but maybe it’s a cute little fox holding a heart instead of a basic red heart or yellow star. Yeah, this makes posts subject to Discord Reaction Spam, but I personally think it’s endearing in its own right.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot; alt=&quot;Senil pointing towards the viewier, winking. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil pointing towards the viewier, winking. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Imagine getting to spell out “KUNG POW PENIS” on someone’s post because of some bullshit they said.&lt;/p&gt;
&lt;h3 id=&quot;a-nicer-default-web-ui-ux&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#a-nicer-default-web-ui-ux&quot;&gt;A nicer default web UI/UX&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Something that base Mastodon struggles with, in my opinion, is a web experience that most folks might enjoy. The mobile phone UI is atrocious - &lt;a href=&quot;https://furry.engineer/@senil888&quot;&gt;go to my Mastodon profile on your phone yourself&lt;/a&gt; - what with the column on the right eating up precious horizontal real estate, and the desktop web UI leaves something to be desired personally. Everything is handled via the text box on the left of the screen, meaning replies can get awkward to manage and set up.&lt;/p&gt;
&lt;p&gt;Meanwhile, Iceshrimp (Misskey in general, but again I used Iceshrimp) has a nice UI that translates well across desktop, tablet, and mobile. It &lt;em&gt;feels&lt;/em&gt; like it belongs on all fronts, and that it was designed to fit those environments as best as possible - I used the mobile website pinned to my home screen the entire time. It’s not perfect, mind you - Iceshrimp’s UI on desktop is REALLY spread out, when I’d appreciate a more central layout that’s a bit narrower, something that Sharkey (a different Misskey fork) does have. I got used to it over time, but it was something I’d have preferred out of the box.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot; alt=&quot;Senil dazed and drooling, with a loading icon above him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil dazed and drooling, with a loading icon above him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The web UI is also customizable - you can use your choice of themes on the server, find someone else’s to use yourself, or create your own color palette if you so desire. It also respects whatever your browser is set to regarding light or dark mode, so it’ll swap between those whenever your computer says so. The right side bar? Can be set to show recent notifications, a small posting form if you want, a &lt;em&gt;clock&lt;/em&gt; or calendar, or nothing at all! It’s a small touch - I personally set it up to show me server performance statistics, so I could watch how things ran in real-time.&lt;/p&gt;
&lt;p&gt;The VPS was total overkill for a single-user instance federated to whoever I followed, and the &lt;a href=&quot;https://relay.infosec.exchange/&quot;&gt;infosec.exchange relay&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;post-importing&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#post-importing&quot;&gt;Post importing!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This was something carried over from its original base, being the now-dead Firefish (which, yes, was another Misskey fork that a lot of Misskey forks forked from, it’s confusing). Unfortunately, that post import tool hadn’t gotten necessary love and a security flaw was found where it didn’t really respect certain privacy settings on Mastodon posts, so the Iceshrimp team totally disabled it. For good reason, especially given that it wasn’t touched since it was first added in Firefish.&lt;/p&gt;
&lt;p&gt;Iceshrimp dotNET is supposedly bringing post importing back - which I hella appreciate. Especially since you could even import a Twitter archive. Something I’d love to see dotNET do that Iceshrimp JS doesn’t is to &lt;em&gt;not re-upload media from links.&lt;/em&gt; This was something I noticed when I imported my Twitter archive into Sharkey - which had the same mostly untouched Firefish import tool - and it straight-up uploaded the media of &lt;strong&gt;every single retweet&lt;/strong&gt; I ever made.&lt;/p&gt;
&lt;p&gt;For hopefully obvious legal and copyright reasons, that’s Not Good, and I’d rather posts with media either link back to the original somehow, or use a link to the image on Twitter (or wherever else)&#39;s servers. Not perfect, and this is assuming that’s realistic to implement, but it’d make the post import feature a 10/10 for users, and an 8/10 for instance admins. Much less junk uploaded to a user’s drive that they legally shouldn’t!&lt;/p&gt;
&lt;h2 id=&quot;what-i-didn-t-really-like&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#what-i-didn-t-really-like&quot;&gt;What I didn’t really like&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot; alt=&quot;Senil cracking his knuckles with flames behind him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil cracking his knuckles with flames behind him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;So, Misskey and co. are still bloated, and there were a variety of features that Iceshrimp JS has that other software doesn’t have (and that Iceshrimp dotNET won’t, either). Fortunately, none of these are super major and are easy enough to ignore.&lt;/p&gt;
&lt;h3 id=&quot;the-god-damn-chat-system&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#the-god-damn-chat-system&quot;&gt;The god-damn chat system&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For SOME REASON, the Misskey developers have a &lt;em&gt;totally separate&lt;/em&gt; chat system that exists outside of the “normal” direct messaging system, which is basically a normal post that only goes to people you mention (with the caveat that mentioning another user also reveals every previous post). Chats on Misskey can &lt;em&gt;kind of&lt;/em&gt; work with DMs, but stuff federates weirdly and just doesn’t cooperate all that well. Fortunately, Iceshrimp dotNET is getting rid of the separate system while working on a UI similar to it that uses normal direct messaging like everything else does.&lt;/p&gt;
&lt;p&gt;I briefly toyed with the chat system. I don’t think it’s good. Just use DM’s like everyone else, or message on a different platform. Custom emoji’s didn’t even federate between two Misskey-based instances.&lt;/p&gt;
&lt;h3 id=&quot;clips-channels-antennas&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#clips-channels-antennas&quot;&gt;Clips? Channels? Antennas?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I really have no idea what clips or channels are meant for - and either way, they don’t really federate outside of the server well (if at all), so they’re really pointless for small instances. Antennas, though, are meant to be Iceshrimp’s customizable version of following tags, a staple across platforms. They’re… annoying to configure, though. And by annoying, I mean really annoying.&lt;/p&gt;
&lt;p&gt;It’s been a while since I’ve touched Iceshrimp, but I remember spending a while looking at documentation trying to figure out how to just follow posts with a “#FurryArt” tag. I eventually got it to work, but it came with a flaw of its own - antennas show posts &lt;em&gt;in the order it finds them&lt;/em&gt;, NOT in reverse chronological order. A post the antenna finds might be five days old that it just stumbled across, followed by a two day old post right below it. It is a more customizable system than just following tags, since you could also filter &lt;em&gt;out&lt;/em&gt; words and phrases too - say, follow “#FurryArt” but don’t show anything also tagged “#NSFW”, or something of that nature.&lt;/p&gt;
&lt;p&gt;It’s a very expansive system that I appreciated, but it felt way too clunky and fairly unintuitive. Posts showing up whenever they arrived, and not displayed in the same reverse chronological as the main timelines, was the sad icing on top for me. If antennae were either a separate timeline entirely, &lt;em&gt;or&lt;/em&gt; displayed posts reverse chronological instead of “whenever they arrive”, I’d tolerate their clunkiness more, purely because it’s a much more expansive system than basic tag following.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot; alt=&quot;Senil with his hands on his head, mouth wide open in fear. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil with his hands on his head, mouth wide open in fear. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&quot;iceshrimp-doesn-t-have-manual-account-approval&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#iceshrimp-doesn-t-have-manual-account-approval&quot;&gt;Iceshrimp doesn’t have manual account approval&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Something a lot of fediverse software supports is registration with manual approval - anyone can technically sign up, but you won’t actually be let in unless a moderator OKs it. This is a pretty easy anti-bot system, since you’re not &lt;a href=&quot;https://www.boia.org/blog/how-to-make-captcha-accessible-to-everyone&quot;&gt;relying on a CAPTCHA that can easily make your service less accessible&lt;/a&gt; and thus harder to sign up for with open registration - plus, a CAPTCHA system doesn’t stop real people from signing up and abusing your server. Iceshrimp &lt;em&gt;does&lt;/em&gt; have an invite system, but it’s based on invite codes that you have to punch in, instead of an invite link you can just click and boom, you’re granted access because you’re (presumably) trusted.&lt;/p&gt;
&lt;p&gt;This is something Iceshrimp dotNET is going to be adding in due time, but it was a turnoff for me in terms of running something publicly. I don’t want to force people to deal with the kinda clunky invite code system, but I also don’t want to leave the server wide-open and ripe for abuse by trolls. Some other Misskey forks - Sharkey being the one I toyed with very, very briefly - do have registration with approval. That was honestly a major factor in me wanting to use that for multi-user hosting - despite me overall liking Iceshrimp more.&lt;/p&gt;
&lt;h3 id=&quot;the-drive-system-1&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#the-drive-system-1&quot;&gt;The drive system…&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;“Wait, didn’t you say you really liked it?”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yes, I did. And I do like it! But it does present some flaws that I can’t ignore. Chief among which is “what is going to prevent users from treating this like a cloud drive?” - capacity is easily capped, but outbound traffic isn’t free if you’re using an S3 bucket for file storage. Of course, it’s easy to just look at who is using a ton of storage and go “hey, please tell me you aren’t abusing this.” Users with admin access &lt;em&gt;can&lt;/em&gt; view the contents of everyone’s drives - something that I would ONLY ever want to do if I absolutely believe a user is abusing the drive system, or to. You know. Delete copyright or illegal materials hosted there.&lt;/p&gt;
&lt;p&gt;There’s also the matter of juggling how much space to give people, how big to let uploads be, so on and so forth. I’ve crunched some numbers and I think a realistic number that most folks won’t hit - especially with server-side image and video compression - is around five gigabytes. More than enough space for photos and selfies, short video clips, etc. Iceshrimp isn’t meant to be a gallery site like Pixelfed is, and I personally find striking that balance to be hard. But that’s just, like, my opinion.&lt;/p&gt;
&lt;p&gt;While I said the drive system is great for budgeting the theoretical maximum S3 storage might cost, it might make it harder to change that down the line. I have no idea what happens if you try to shrink the per-user drive allowance while some users have exceeded the new, smaller limits. I don’t think I’d want to find out. Growing is is clearly no problem, but it might be easy to give everyone more storage than really needed, and then have to clamp down on storage as more users join in order to keep storage costs lower. I might just be stupid in assuming that, though.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot; alt=&quot;Senil lying face-down on the ground, with a low battery symbol above him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil lying face-down on the ground, with a low battery symbol above him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I don’t think the drive system is remotely bad - I think it’s a very good idea, and a roundabout way to estimate worst-case costs for S3 object storage, should you pay for that. It’s just, well, “A Drive”, which means you now need to deal with everything “A Drive” entails. And I &lt;em&gt;really&lt;/em&gt; don’t like that admins can just zoom in and see the contents of someone’s drive for privacy reasons, whether it’s been posted anywhere (even in a private DM!), but I &lt;em&gt;do&lt;/em&gt; get it from an admin view, especially when it comes to users hosting blatantly illegal content that can get an instance shut down. Makes it easier to clean them up, maybe?&lt;/p&gt;
&lt;h2 id=&quot;so-yeah&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/my-time-with-iceshrimp/#so-yeah&quot;&gt;So… yeah&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I really enjoyed my time with Iceshrimp - I’d probably still use it if it wasn’t for the frustration that is “federating a single user instance”. I love the software, despite some of its quirks, and I’m really looking forward to what Iceshrimp dotNET is going to bring to the table as it gets more and more polished.&lt;/p&gt;
&lt;p&gt;In the meantime, I’ll just chill out on Mastodon and deal with the “meh” in my eyes. I’ll move over at sime point, maybe self-host again on a cheaper VPS if I don’t run it on my own box(es).&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/SleepySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/SleepySenil.png&quot; alt=&quot;Senil sprawled on his back, sleeping. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil sprawled on his back, sleeping. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;</content>
	</entry>
	
	<entry>
		<title>Splatlings - Initial design</title>
		<link href="https://blog.senil.me/splatling-initial-prep/"/>
		<updated>2024-10-27T00:00:00Z</updated>
		<id>https://blog.senil.me/splatling-initial-prep/</id>
		<content type="html">&lt;p&gt;Yep! I want to build the splatlings from Splatoon 3 - eventually I want to build the Hydra splatling, but I’ll be starting off with splatlings that focus more on developing specific techniques before moving onto the splatling that will ask the most of me. From learning how to make stuff look metallic, molding materials to form the “metal” canister, fire hydrant, and support bar… the Hydra will take a lot from me.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/d/d1/S3_Weapon_Main_Hydra_Splatling.png&quot;&gt;&lt;img src=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/d/d1/S3_Weapon_Main_Hydra_Splatling.png&quot; alt=&quot;The Hydra splatling from Splatoon 3&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;The Hydra splatling from Splatoon 3&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;There are three splatlings I want to build, each of them focusing on different aspects.&lt;/p&gt;
&lt;h2 id=&quot;the-ballpoint-splatling&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/splatling-initial-prep/#the-ballpoint-splatling&quot;&gt;The Ballpoint Splatling&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This splatling build will focus primarily on the building aspect. The main hurdle I anticipate is the clear plastic part that makes up like, half of the build. This is going to involve a &lt;em&gt;lot&lt;/em&gt; of plexi-molding, 3D printing, and a lot of attention to detail to make what I build look, like, well. A giant ballpoint pen - one of the ones with multiple ink barrels.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/f/f9/S3_Weapon_Main_Ballpoint_Splatling.png&quot;&gt;&lt;img src=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/f/f9/S3_Weapon_Main_Ballpoint_Splatling.png&quot; alt=&quot;The Ballpoint splatling from Splatoon 3.&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;The Ballpoint splatling from Splatoon 3.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;At some point I want to add a motor, some lights, a speaker, and some other things to really sell that “this is pulled straight from the game” - however, that’s a “later me” problem. I &lt;em&gt;do&lt;/em&gt; plan on initially designing with that goal in mind.&lt;/p&gt;
&lt;h2 id=&quot;the-heavy-splatling&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/splatling-initial-prep/#the-heavy-splatling&quot;&gt;The Heavy Splatling&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This one will focus on the electronic side of everything. Motors, sounds, lights, controls, etc. My biggest concern with the Heavy splatling will be the motor design. My sister’s wife suggested a weak DC motor, and I’ve contemplated setting it up to be belt driven since it &lt;em&gt;might&lt;/em&gt; enable me to use similar motor code to drive every other splatling I build.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/5/5e/S3_Weapon_Main_Heavy_Splatling.png&quot;&gt;&lt;img src=&quot;https://cdn.wikimg.net/en/splatoonwiki/images/5/5e/S3_Weapon_Main_Heavy_Splatling.png&quot; alt=&quot;The Heavy splatling from Splatoon 3.&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;The Heavy splatling from Splatoon 3.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The Heavy splatling is also going to be 90% about the code, and will be the starting point for the code design I want to achieve. My end goal is a relatively modular code setup that’s segmented in ways that should &lt;em&gt;hopefully&lt;/em&gt; minimize the re-writes necessary. Stuff like changing the how long it takes to hit the first and full charge, how long it fires based on how long it’s charged, all sorts of stuff I want to make as re-usable as possible.&lt;/p&gt;
&lt;p&gt;Both because it’ll make my life easier when it comes to future splatling builds, and also to (hopefully) make it easier for others who want to build a splatling themself.&lt;/p&gt;
&lt;h2 id=&quot;the-hydra-splatling&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/splatling-initial-prep/#the-hydra-splatling&quot;&gt;The Hydra Splatling&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This one will be the thing to merge everything together. Electronics, building, the works. The build will be the hard part, mostly because the Hydra is my main weapon in Splatoon and I want to put my all into it. Making stuff look like it’s actually metal, figuring out how to build a &lt;em&gt;cast iron fire hydrant&lt;/em&gt; without building it from cast iron, the Works. It’ll be a challenge, and definitely one I want to save for last.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/SenilHydra.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/SenilHydra.png&quot; alt=&quot;Senil leaning on the Hydra splatling. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil leaning on the Hydra splatling. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;</content>
	</entry>
	
	<entry>
		<title>Tablets are kind of shit right now.</title>
		<link href="https://blog.senil.me/tablets-are-kinda-shit/"/>
		<updated>2024-10-26T00:00:00Z</updated>
		<id>https://blog.senil.me/tablets-are-kinda-shit/</id>
		<content type="html">&lt;p&gt;So, uh. What do I mean here? Well, through a couple things I’ve read and watched lately, I’ve formed Feelings and Thoughts regarding the current space of tablets. And in my genuine opinion, they all kind of… suck. Not to say the iPad isn’t great for art, or there isn’t value in a nice Android tablet, or that Windows tablets aren’t (technically) capable of running productivity software. It’s just, well, there aren’t really options that fit what I would &lt;em&gt;personally&lt;/em&gt; love to see.&lt;/p&gt;
&lt;p&gt;(update: addenum to the Windows tablet section as of 8:20PM Pacific, 2024-10-26)&lt;/p&gt;
&lt;h2 id=&quot;android-s-tablet-ui-ux-sucks&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#android-s-tablet-ui-ux-sucks&quot;&gt;Android’s tablet UI/UX sucks.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OK, so let’s start things off with the Android tablet sphere, because my phone is Android so that’s more what I’m familiar with UI/UX wise. Android tablets are… usually not great. Not necessarily for poor specs, the high-end Samsung Galaxy tabs are &lt;em&gt;really good&lt;/em&gt; and try to punch at the same “great for drawing/note taking/art” level that nicer iPads target. It’s just, outside of apps purposely targeted for tablets and tablet productivity, the Android tablet experience is really just “big phone” - which is not good. In part, this is because Android tablets were never really taken seriously outside of “big phone” and general purpose media consumption device, and nobody has really made a “productivity” Android tablet outside of Samsung.&lt;/p&gt;
&lt;p&gt;I don’t count the Pixel tablet because it’s more trying to be an Android tablet that can also act as a Nest Home hub thing whenever you dock it. Which is really neat and I like that idea. It’s just only good at note-taking otherwise, courtesy of USI 2.0 stylus support.&lt;/p&gt;
&lt;p&gt;So, Android tablets are kind of a wash because UI/UX isn’t really meant for that just yet. I’m wrapping ChromeOS up in this section too because it’s the same problem - everything is still primarily geared around the desktop experience, and because a lot of things aren’t designed around Android tablets (let alone ChromeOS tablets) they suffer from the same “big phone” experience - though my basic note-taking app that works on ChromeOS, &lt;a href=&quot;https://www.squidnotes.com/&quot;&gt;Squid&lt;/a&gt;, has a really nice tablet-centric UI on the way. I like it a lot.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/HeartSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/HeartSenil.png&quot; alt=&quot;Senil hugging a big pink heart. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil hugging a big pink heart. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;windows-tablets-sadly-aren-t-much-better&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#windows-tablets-sadly-aren-t-much-better&quot;&gt;Windows tablets sadly aren’t much better.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In part, the Windows tablet experience sucks because ever since Windows 8, Microsoft has really dialed back the touch-centric features of Windows. I totally understand why, since Windows 8 was widely hated because it forced the touch-centric UI/UX onto everybody, regardless of whether you even had a touchscreen available. But it unfortunately means that Windows 11 is &lt;em&gt;terribly suited&lt;/em&gt; to a tablet-focused experience as a result.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;love&lt;/em&gt; the overall style of the Surface Pro, and I think the built-in kickstand makes it better suit as a productivity machine as well. Yes, the keyboard setup sucks but I doubt the Magic Keyboard Folio is that much better. Unfortunately, it’s hampered by Windows itself. And extra unfortunately, because the Surface Pro now runs a Snapdragon ARM CPU, it’ll forever be at a disadvantage software wise. I only see that changing if Windows on ARM because a HUGE deal in the coming months and years - and for more ARM chipsets to be powerful enough to provide a solid Windows experience.&lt;/p&gt;
&lt;p&gt;Which is something I doubt will happen because a large install base of Windows machines is desktops, and good luck convincing PC gamers and co. to switch to Linux or find a way to get existing hardware to work via ARM. It’s possible, since the Ampere ARM CPUs (that are meant for servers) do support PCIe 4.0, so technically it’s possible, but we’d need to see consumer desktop-oriented CPUs start to exist first that offer comparable performance to at least last-gen hardware.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/SleepySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/SleepySenil.png&quot; alt=&quot;Senil sprawled on his back, sleeping. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil sprawled on his back, sleeping. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h3 id=&quot;addendum-windows-still-sucks-regardless&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#addendum-windows-still-sucks-regardless&quot;&gt;Addendum - Windows still sucks, regardless.&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I was talking about the state of Windows on ARM last night around when this post went up, and I wanted to wrap some of that into this post, too. The basics is that - despite Microsoft being the one who needs to make “Windows on ARM for productivity” a reality, it means making Windows &lt;strong&gt;something people want to use.&lt;/strong&gt; With Microsoft shoe-horning Copilot+, Recall, and who knows what else is in the pipeline, a lot of people don’t trust Windows. I know I don’t - my laptop runs Linux and the only reason my desktop will continue to runs Windows is because &lt;em&gt;my tools don’t work on Linux.&lt;/em&gt; It’s not because I LIKE Windows as an OS - it’s &lt;em&gt;okay&lt;/em&gt;, but there’s a lot of flaws in it that Microsoft won’t address.&lt;/p&gt;
&lt;p&gt;Because they’re all in on AI, and so a lot of their money - money that could be spent updating Windows and making it something people &lt;em&gt;choose to use&lt;/em&gt; - is going towards a fad few people care about when people want their damn operating system to work &lt;em&gt;with&lt;/em&gt; them, instead of us having to work with Windows. Windows is a monolith. People use it because it’s what everything has always used, it’s what your new laptop from Best Buy or Walmart comes installed with unless it’s a Chromebook or Macbook.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;want&lt;/em&gt; to see Microsoft push “Windows on ARM is great for productivity!” when it comes to CAD and engineering tools, but people will only care for Windows on ARM specifically if Microsoft can make Windows on ARM worth running. And most people don’t really like Windows at this point. Which fuels the fire &lt;em&gt;against&lt;/em&gt; Apple doing anything to make the iPad Pro the true compute powerhouse that it totally could be.&lt;/p&gt;
&lt;p&gt;(anyways, back to the original post)&lt;/p&gt;
&lt;h2 id=&quot;the-ipad-pro-is-overpowered-for-its-software&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#the-ipad-pro-is-overpowered-for-its-software&quot;&gt;The iPad Pro is overpowered for its software.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m not going to go into the weeds here, because &lt;a href=&quot;https://www.youtube.com/watch?v=J5wEUpLrQK0&quot;&gt;Dankpods has already done a good video talking about this&lt;/a&gt; and &lt;a href=&quot;https://blog.sebin-nyshkim.net/posts/apple-has-no-idea-what-to-do-with-the-ipad/&quot;&gt;Sebin has as well, though more about how complex the iPad range is now&lt;/a&gt;. I really do agree, because iPad OS isn’t great. And a lot of productivity apps that exist on both iPad OS &lt;em&gt;and&lt;/em&gt; Mac OS generally gimp the iPad version for some reason or another. From a technical standpoint, there isn’t any &lt;em&gt;practical&lt;/em&gt; reason now - the iPad Pro’s run M-series chips (The Pro’s run the iPad exclusive M4, and the Air’s run on their M2), which power their Macbook’s, Mac Mini, Mac Studio, and &lt;em&gt;Mac Pro&lt;/em&gt; - though those generally have the higher-end variants, it’s still the desktop-grade silicon.&lt;/p&gt;
&lt;p&gt;Which is what infuriates me the most. I personally will never buy an Apple product unless I can &lt;a href=&quot;https://asahilinux.org/&quot;&gt;install something like Asahi Linux&lt;/a&gt; on it, so it’s not like I’d touch an iPad. But it annoys me that Apple now has iPad’s that could, &lt;em&gt;in theory&lt;/em&gt;, run desktop MacOS and run desktop-grade apps, but they’re limited by the garbage that is iPad OS. An iPad Pro that runs a touch-focused version of MacOS would be a &lt;em&gt;massive&lt;/em&gt; improvement in my opinion, largely because, well, it’d be a high-end tablet running a desktop OS that’s been designed around ARM since 2020. You could build a strong Windows ARM tablet any day of the week, but Windows on ARM will have to co-exist with x86_64 Windows for a long while - even if Microsoft gets a very efficient system to run x86_64 apps on ARM, most everyone is going to build for x86_64 still.&lt;/p&gt;
&lt;h2 id=&quot;giving-an-ipad-macos-might-drive-competition&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#giving-an-ipad-macos-might-drive-competition&quot;&gt;Giving an iPad MacOS might drive competition.&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/FlexingSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/FlexingSenil.png&quot; alt=&quot;Senil flexing his biceps, smirking. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil flexing his biceps, smirking. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;(key word being MIGHT)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In my opinion, a large part of why tablets suffer is because they’ve existed in this weird limbo for a while now. Most of the time they’re used as media consumption devices that are more portable than a laptop, but still much larger than a phone. Some tablets get used for at least note taking and some basic document work, higher-end ones are getting used for digital art too - and that’s a relatively recent development. The idea of a true productivity-focused tablet has somewhat existed in Microsoft’s Surface tablet lineup, but x86_64 Windows tablets generally have poor battery life, and Windows on ARM is just now proving to be remotely viable.&lt;/p&gt;
&lt;p&gt;In my perfect world, if Apple gave an iPad Pro a touch flavor of MacOS - still able to run standard MacOS apps and whatnot, just with a more touch-friendly UI/UX - it would pressure companies like Microsoft to push harder for Windows on ARM and bring it up to parity, especially with the needed work to get x86_64 to ARM working smoothly and without fuss. It might get companies like Samsung to push for a better Android tablet experience, or release their own Windows on ARM tablet that trades blows with Microsoft’s - they have plenty of experience with their Galaxy Tab lineup, after all.&lt;/p&gt;
&lt;p&gt;If Apple’s go proves popular enough, it might convince productivity app developers to work on ARM versions that work as well as their x86_64 offerings too, or at least make sure their x86_64 versions run good on a high-end ARM machine. Something that I’d massively appreciate, since so many productivity tools are limited to Windows only, and you have to fight to get them to work on other platforms. If ARM becomes more prevalent on Windows, it’ll hopefully push them to make ARM-focused builds too.&lt;/p&gt;
&lt;h2 id=&quot;freedom-of-choice&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#freedom-of-choice&quot;&gt;Freedom of choice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I envision a reality where someone’s operating system of choice isn’t a major barrier in using software. I run a Linux laptop. I want to run AutoCAD Fusion for 3D modeling work. There does not exist an official build of Fusion for Linux, and while hacky methods exist… &lt;em&gt;they’re hacky methods&lt;/em&gt;. Where the only limits imposed on how well software runs is the form factor of a device - a desktop with powerful cooling, a hefty power supply, and strong dedicated graphics could run stuff smoother than a powerful but limited laptop, which will run better than a tablet with no air cooling.&lt;/p&gt;
&lt;p&gt;That reality isn’t going to happen, for admittedly good reasons. You don’t really want someone to install heavy 3D modeling software on Nana’s $500 laptop from Best Buy and then complain that it runs like shit, let alone someone’s tablet that’s strong but would overheat in two seconds flat.&lt;/p&gt;
&lt;p&gt;I just wish there was user choice and agency in the matter.&lt;/p&gt;
&lt;h2 id=&quot;which-is-why-i-want-to-build-dumb-shit&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/tablets-are-kinda-shit/#which-is-why-i-want-to-build-dumb-shit&quot;&gt;Which is why I want to build dumb shit&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/LaughingSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/LaughingSenil.png&quot; alt=&quot;Senil laughing on the floor. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil laughing on the floor. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Seriously, part of my motive for my dumb computer-oriented projects I’ll share here - like my stupid “shove a Framework 13 mainboard into a modded Wii U Gamepad” concept - is to see what it takes to build a comfortable compute experience. The Wii U gamepad mod is meant to be silly and make you go “This is a Steam Deck, but it isn’t”. I want to see if I can build bespoke tablets that run on a Framework, too - if I can get a screen with the appropriate eDP port &lt;em&gt;and&lt;/em&gt; USB touch (yes, the Framework 13 eDP port looks to support USB 2.0!) then I might be able to build a weird looking but perfectly capable tablet, running full-fledged desktop Linux.&lt;/p&gt;
&lt;p&gt;There’s even a RISC-V board a third party company is developing, though Framework makes it clear it’s for development use only and should not be used as a daily driver mainboard. Perhaps I could run that once it’s fine-tuned, and get the benefits of RISC-V. The sky - and limits of the Framework form factor - is the limit. And I want to discover what’s possible by building this bespoke stuff myself.&lt;/p&gt;
&lt;p&gt;Sure, there’s ARM-based single board computers, but I want to build something that feels “integrated” in a way, and make it as straightforward as possible for &lt;em&gt;someone else&lt;/em&gt; to build it, too. Using the Framework board and battery is about the easiest way I could manage that, especially since the mainboard layout isn’t too likely to change for some time.&lt;/p&gt;
&lt;p&gt;Maybe I’ll run into a clever idea one day, and see what it takes to make it into what I “dream” of. It won’t be perfect, but it might get close enough.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot; alt=&quot;Senil happily tossing confetti in the air. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil happily tossing confetti in the air. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;</content>
	</entry>
	
	<entry>
		<title>Rest in peace, Cohost</title>
		<link href="https://blog.senil.me/rip-cohost/"/>
		<updated>2024-10-25T00:00:00Z</updated>
		<id>https://blog.senil.me/rip-cohost/</id>
		<content type="html">&lt;p&gt;Cohost is shutting down the end of the year. While I’m kinda sad because it was a good experiment to see if non-federated social media could be viable that doesn’t rely on selling data or anything, I think Anti-Software Software Club just made too many assumptions that didn’t or couldn’t pan out. Including just… not understanding what they wanted in the end.&lt;/p&gt;
&lt;p&gt;This post was originally a three-part tumblr post, so it’s very long. Part “one” was what I think went wrong, part “two” is why I think a federated model “works” a bit better than centralized (though it’s flawed, too), and there’s a “TL;DR” part that &lt;a href=&quot;https://blog.senil.me/rip-cohost/#the-tl-dr-of-my-thoughts-re-cohost-shutting-down&quot;&gt;I’ll just link to here if you want to skip the many, many paragraphs below.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-i-think-they-assumed&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#what-i-think-they-assumed&quot;&gt;What I think they assumed&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Number 1 mostly being them being “blindsided” by Stripe clarifying their policy that, in the end, means ASSC couldn’t use them as a way for users to tip each other or the Artists Alley section and such. That policy existed for years, well before Cohost ever existed. For context, ASSC originally wanted to build a Patreon competitor, not a social media site. They would have failed so hard if they stuck to a Patreon competitor on this alone.&lt;/p&gt;
&lt;p&gt;And in my opinion, number 2 is their pay. They were paying themselves very well-off all things considered, and everyone was paid the exact same amount (~94k last I heard). That’s… a lot of money going towards pay that could’ve gone to hosting costs. They’re a startup. You pay yourselves what you can. I appreciate that they paid themselves well, but again. Startup. You pay what you can, and they were nowhere close to breaking even at any point.&lt;/p&gt;
&lt;p&gt;I think their financial model didn’t do themselves any favors - they started out with “we got a lot of loan money to do this and now we have to make it profitable” which, yeah, sometimes that’s what it takes. But that’s venture capitalism. Especially since Cohost’s source code WAS the collateral! They acted as a leftist group trying to market themselves as a non-profit/not-for-profit (they’re a LLC, they’re legally not forced to do either), paying themselves well more than they realistically, and hoped they could get enough people to subscribe monthly to break even.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;That… doesn’t work.&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/DrainedSenil.png&quot; alt=&quot;Senil lying flat on his stomach. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil lying flat on his stomach. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Not to say this would’ve fixed things, but I think them registering as an LLC didn’t help. That prevented them from bringing on anything resembling a volunteer, and since their whole thing was “everyone gets paid the same” it meant they had to operate with very few people. If I recall correctly, they had one moderator. Maybe two. Maybe. Two developers, an artist, and a moderator. Four people. MAYBE five, I forget the exact number.&lt;/p&gt;
&lt;h2 id=&quot;hypothetical-territory-ahead&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#hypothetical-territory-ahead&quot;&gt;Hypothetical territory ahead&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Being a non-profit comes with its own set of problems, but if they could become and maintain a 501©3 non-profit, they could pay themselves what they could and have people willing to help volunteer moderate. They could never get code contributors, though, since their source code was their collateral it by nature had to be closed off. Also, donations (recurring or one-off) are tax-deductible for US-members, so while it’s not a HUGE benefit it offers at least that small bonus.&lt;/p&gt;
&lt;p&gt;I’m glad that they tried, and got as far as they did (even if it meant loan after loan to not die instantly). It showed that it could be possible - that there’s hope in this idea. It’s just a question of HOW to make it a sustainable reality. I don’t think there’s a clear answer there, though. Like my non-profit idea hinges heavily on maintaining 501©3 status (or similar) and being able to bring on volunteers as-needed. Using a public spec for the back-end (like ActivityPub or ATProto) so the focus can be on implementing it (even if federation is never a thing) instead of doing it raw - which avoids the back-end development time but then means having to work with an existing spec that may or may not change substantially over time.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/SadSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/SadSenil.png&quot; alt=&quot;Senil curled into a fetal position, sobbing. Art by [Dragonjourney](httpss://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil curled into a fetal position, sobbing. Art by &lt;a href=&quot;httpss://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I don’t know. I have no idea what would make a medium-form social media such as Cohost viable. Maybe it’s the same idea but with lower pay so it’s easier to bring new people on as-needed, with the expectation that this is a passion project ‘til it gets off the ground. Maybe it takes the “use a public spec for back-end” approach and focuses on the implementation of it with their own additions and flair. ActivityPub is one spec, but you have Mastodon, Pixelfed, Misskey, Wafrn, etc. that all go in different directions. ATProto will likely be the same one day - Bluesky being the obvious “reference” implementation right now, and then various other flavors that go their own direction with ATProto down the line.&lt;/p&gt;
&lt;p&gt;Maybe it’s something else entirely that I could never ever think of. All I do know is that I’m glad they tried. Unfortunately, the writing has been on the wall for months now and honestly? If you didn’t expect that, that’s on you. People have been saying that Cohost wasn’t sustainable for months.&lt;/p&gt;
&lt;h2 id=&quot;why-i-think-the-federated-model-works-kind-of&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#why-i-think-the-federated-model-works-kind-of&quot;&gt;Why I think the federated model “works” (kind of)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So part of what makes the fediverse (Mastodon, Pixelfed, Misskey &amp;amp; co., Wafrn, etc. for your Twitter/Instagram/Tumblr vibes) work from a financial view is that costs are spread out across tons of instances, and there are tons of ways to host this stuff. Either from a dirt cheap VPS from Hetzner that hosts a dozen people, to a hundred-ish instance that runs locally with solid redundancy, to a thousand-ish instance that ALSO runs locally (but is suffering growing pains from VPS to local transition IIRC), to a multi-thousand user instance that runs on… something? I don’t know what meow.social uses.&lt;/p&gt;
&lt;p&gt;But those costs are on a per-instance basis, and there are tons of ways to shift that cost perspective around to make things cheaper, or accidentally make things more expensive. Using a more costly VPS service, expensive S3 storage, expensive CDNs to make stuff available more better (extra useful for those huge instances that cross the thousand-member mark), etc. There are various ways to make it expensive.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot; alt=&quot;Senil screaming in fear, hands on his head. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil screaming in fear, hands on his head. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;But there are ALSO various ways to make the hosting cost go down. Running local boxes means the only hosting cost (outside of external S3 buckets, CDNs, etc.) is the up-front purchase cost of hardware, upgrades over time, and your time-cost of keeping them running (though you might be able to make it set-and-forget enough to where a VPS might be set-and-forget). Forgoing S3 buckets and a CDN mean everything goes through your local boxes, which’ll up local storage needs but again, those are up-front purchases (though you might need to upgrade to small business internet to keep your ISP happy, which I guess counts towards hosting costs but you also live there so…)&lt;/p&gt;
&lt;p&gt;This is, of course, only considering hosting stuff. Pretty much all fediverse instances, as far as I’m aware, run on totally volunteer labor. These instances are passion projects of the admins and mods, run for the sake of running it and to provide community to folks online. If you were to start paying for their time administrating and moderating, then you start to see instance costs go higher and higher (varies on what instances pay folks, how they handle time spent, etc.). That IS a part of the equation that the fediverse does not explicitly handle.&lt;/p&gt;
&lt;p&gt;The same “passion project” logic is a large part of fediverse softward development outside of the big projects like base Mastodon and &lt;em&gt;maybe&lt;/em&gt; Pixelfed - those are developed in large part by actual organizations who pay people to do the bulk of the work. But here’s the kicker - other people can also help out. Submitting feature requests, bug fixes, issues, etc. to the teams directly means there’s a chance of problems getting fixed or features added that other developers have the passion to show how to implement it, or discuss how to handle it with the folks who run the project.&lt;/p&gt;
&lt;p&gt;That’s of course something Cohost could never benefit from, because the source code itself was used as collateral for their initial loans. They could never open source it under any terms without the express permission of the loaner, who would likely veto the idea anyways, because there goes the motive to keep it as collateral. They can’t have other people contribute bug fixes or program new features to help them out.&lt;/p&gt;
&lt;h2 id=&quot;paying-people-to-run-a-service-is-important&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#paying-people-to-run-a-service-is-important&quot;&gt;Paying people to run a service is important&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/HowdySenil.png&quot; alt=&quot;Senil pointing towards the viewer, winking. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil pointing towards the viewer, winking. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Cohost does have the benefit of, y’know, paying everyone for their time and energy… but that costs money that I don’t think they considered how to structure. They only ever had one, maybe two moderators for THOUSANDS of users. Yeah, they’re paid, but they literally only have so much time in a day to moderate things - and they can’t be awake 24/7 to watch over things, while volunteer mods might be in various time zones or have different work schedules so there might always be a person or two to monitor stuff.&lt;/p&gt;
&lt;p&gt;I know there’s nothing that can really bridge that monetary gap - paying people and everything around that costs a lot of money, which can scale way faster than hosting costs. The instance I’m on (which shares staff and such with another instance and a Lemmy one so it’s not super fair) has seven people listed as staff. I don’t know how much work they actually put in (or need to put in) to moderating and administrating everything a week, let’s just go with 20 hours a week per person, or 140 hours total per week.&lt;/p&gt;
&lt;p&gt;At my state’s minimum wage (bout $16 an hour right now) that’s around 116.5k annually, or 9710 a month, give or take. I don’t know the exact hosting costs since IIRC stuff is now hosted locally, and I don’t know what additional regular “costs” exist beyond whoever’s basement this is all at, but whatever it was it now requires an extra 9710 a month to break even.&lt;/p&gt;
&lt;p&gt;We have a listed “active user count” of 844 between furry.engineer and pawb.fun - I’m not counting the Lemmy instance because that’s a much harder figure to find. I’m also assuming there are zero duplicate accounts between the instances, and everyone is totally unique. In order to raise enough money just to pay every my state’s minimum wage at 20 hours a week (treating this as a part time job, basically), each member would need to contribute about 11.5 bucks a month to just pay the staff team for their admin and mod work. Probably add in a couple more bucks to help cover any added costs like better internet, increased power bills, etc. and suddenly you might be looking at 15 bucks a month to pay everyone a minimum wage part-time job’s worth of labor and help cover self-hosting fees.&lt;/p&gt;
&lt;p&gt;That’s not a lot of money all things considered - since this is a passion project of sorts I don’t expect this to be a full-time job, especially since nobody is really doing active development work like the Cohost team was doing. But that’s still money to keep it up and running. BUT! There’s a small beauty in all of this.&lt;/p&gt;
&lt;h3 id=&quot;larger-instances-don-t-necessarily-need-a-ton-more-mods-or-people-behind-it&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#larger-instances-don-t-necessarily-need-a-ton-more-mods-or-people-behind-it&quot;&gt;Larger instances don’t necessarily need a ton more mods or people behind it.&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Take meow.social - a furry instance with about 2.3k active users. I don’t know how exactly they host things, but they have a transparency report that goes over what they raise via Patreon monthly as well as their expenses, and it seems like it trends to around 300 bucks a month for hosting and such. They have two admins and four moderators - taking my same “part time job, my state’s minimum wage” estimate, we’re looking at an additional $8320 a month to pay everyone. Let’s round up that plus the rough hosting cost of 300 to a straightforward $8700 a month. Recall that they have 2300 active users. If every active user donated to meow.social to pay their staff and keep it running, &lt;strong&gt;they’d only need to donate $4 a month on average to keep it going.&lt;/strong&gt; Toss in some extra to help build up a small savings for future upgrades and badabing badaboom, you have a functional instance running at not that much all things considered.&lt;/p&gt;
&lt;p&gt;Meow.social is based in France though, so the reality is these numbers are probably low but the point remains that staff plus user count doesn’t have to scale that much, but you should still have plenty of mods to be effective.&lt;/p&gt;
&lt;p&gt;However, meow.social is still a passion project - everyone part of running it has real jobs outside of it, the paying part is just a “thank you” of sorts to help cover their time and reward their efforts. And that’s kinda the bridge between fediverse projects, which are generally run as a passion project and any donations/payments are a “thanks for keeping this going” deal. While a brand-new social media, which has the development costs of building the damn thing on top of hosting and paying people, is GOING to cost more money because you have to pay for the development work too, which is definitely a full-time job that’ll have to pay decent enough to entice people to work there and stick around.&lt;/p&gt;
&lt;p&gt;It’s why I mildly get the Cohost team paying themselves well - it’s not exactly easy work doing all of this. And it’s not like I know their exact numbers on hosting costs, development time, legal fees, etc. that factor into everything. But I still think that maybe there was something that they could’ve done differently to stay on top of things better, and maybe. Just maybe. Pull off the ultimate mission of “making centralized social media that doesn’t suck for users.” That’s why I applaud the Cohost team for trying, and succeeding (ish) for so long.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;They suggested that this might actually be possible, if things worked a little differently.&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfettiSenil.png&quot; alt=&quot;Senil happily tossing confetti in the air. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil happily tossing confetti in the air. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;the-potential-of-cohost&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#the-potential-of-cohost&quot;&gt;The potential of Cohost&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Put more effort into the core product and fixate on one idea instead of trying to come up with a different one, leaving the core product untouched for months. Maybe use existing back-ends to kick-start development, so that you aren’t building entirely from the ground up and have reference implementations of various things to help get the project going (aka my idea of using ActivityPub or ATProto as the back-end, with the intent of never allowing federation). Paying yourselves a bit less to compensate for “this is a start-up effort” and prioritize having more of the support crew as-needed.&lt;/p&gt;
&lt;p&gt;I know that there’s potential here. I don’t know how to go about it, or if it’s even worth the initial investment to try, but I at least think that it might maybe be viable. It’ll take some clever thinking, but ultimately Cohost was a starting point in the effort to return to a less-scummy web. They started the path to proving it’s possible, even if in the end they failed. Hopefully some other crew picks up the torch and goes farther, having learned from what likely did Cohost in and doing better.&lt;/p&gt;
&lt;p&gt;Ultimately, there’s just no way to possibly know. All I want is for folks to have more spaces online that aren’t data-selling hellholes like Facebook/Instagram/Threads, Twitter, Tumblr, probably Bluesky eventually (if not already), Reddit, TikTok, etc. There aren’t many well-known medium to large online spaces that are run by the people, for the people anymore. It’s all about “line go up” forever to please shareholders and venture capitalists, not breaking even while running a satisfying service.&lt;/p&gt;
&lt;p&gt;While I think the fediverse proves a different direction that social media could take, being a source of passion projects and the occasional corporate group paying folks to develop key pieces that help everyone else, there is still a place for more centralized social media. The fediverse has its own problems too, both structurally and socially.&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot; alt=&quot;Senil screaming in fear, hands on his head. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil screaming in fear, hands on his head. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h1 id=&quot;the-tl-dr-of-my-thoughts-re-cohost-shutting-down&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#the-tl-dr-of-my-thoughts-re-cohost-shutting-down&quot;&gt;The TL;DR of my thoughts re: Cohost shutting down.&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;OK this is still a long TL;DR but I tried OK?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cohost is shutting down end of the year, going read-only October 1st and getting data backups out the door ASAP. In my opinion, this was going to happen eventually given their funding model - so it was a question of “when”, not “if” it happens.&lt;/li&gt;
&lt;li&gt;Despite the flaws I saw in how Anti-Software Software Club marketed themselves as a company (being leftist co-op not-for-profit despite being an LLC with no obligation to do that), there was still value in what Cohost was trying to do.&lt;/li&gt;
&lt;li&gt;Them incorporating as an LLC, to myself, might have been a mistake since it legally prevented them from bringing on anything resembling volunteer moderators. While being a 501©3 or similar non-profit is difficult, they could still pay the core team and have volunteer mods if needed.&lt;/li&gt;
&lt;li&gt;Their initial round of funding used the Cohost source code as collateral, preventing them from making it open-source to help gather community contributions to bug fixing, feature requests, etc. on the back-end directly.&lt;/li&gt;
&lt;li&gt;They wildly misunderstood Stripe’s terms of service when it comes to payments, forcing them to gut months of work into “eggbux” which is basically what tumblr tipping is, and was part of their effort to become a Patreon alternative (their original goal). They claim this was a sudden change, despite it just being a language clarification for a policy Stripe has had for years now.&lt;/li&gt;
&lt;li&gt;Per the leftist co-op branding, they all agreed to pay themselves equally (for the most part, stuff has changed now and then) and increase their pay to align with cost-of-living adjustments. This, to me, is a noble goal, but contributed to the vast majority of their expenses and made it even harder for their user base to subscribe and help cover operating costs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;despite-all-of-these-negatives-they-still-managed-to&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/rip-cohost/#despite-all-of-these-negatives-they-still-managed-to&quot;&gt;Despite all of these negatives, they still managed to…&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Prove that this is a viable concept - Cohost has INCREDIBLE subscriber rates for people who are willing to pay for the service to keep it alive. This, to me, heavily suggests that people want not-scummy social media that doesn’t sell user data or push shitty ads.&lt;/li&gt;
&lt;li&gt;Prove that users like this kind of service. As far as I’m aware, there was no advertising for Cohost outside of word-of-mouth. Everyone who signed up likely heard of it from someone else. This of course weakened new user rates, but it also meant every active user there heard of it from someone and liked it enough to stay.&lt;/li&gt;
&lt;li&gt;Prove that it might just be possible to do all of this work and pay their core team. That idea alone likely led to more monthly subscribers willing to help keep it afloat, because they knew their money was also helping keep them paid too. I still disagree with their payment model and motives, but hey. They still did it.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/FlexingSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/FlexingSenil.png&quot; alt=&quot;Senil flexing his biceps, smirking. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil flexing his biceps, smirking. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Cohost, despite its flaws, was a fantastic experiment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m sad that it’s gone, but happy for what it was able to achieve and suggest is possible for future projects. I don’t want people to be disheartened by Cohost’s attempt - I want people to see what they did, try to understand the core pain-points, and try to get farther than ASSC did with Cohost. Maybe we’ll have a true, not-scummy centralized social media competitor someday, because people dare to keep trying to make the dream real.&lt;/p&gt;
&lt;p&gt;Will that ever happen? Time will tell. But I don’t want folks to ever give up. The web can still be ours, one made for the people, by the people, instead of for venture capitalists who want more money forever and ever.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Why I view E2EE the same as critical infrastructure.</title>
		<link href="https://blog.senil.me/critical-infra-and-e2ee/"/>
		<updated>2024-10-21T00:00:00Z</updated>
		<id>https://blog.senil.me/critical-infra-and-e2ee/</id>
		<content type="html">&lt;p&gt;This is just a compilation of a very long thread I made on Mastodon so I can share this better. For more context, this is all in reference to my replies to Soatok’s ongoing responses to the Matrix dev team re: Soatok’s responsible disclosure of security flaws. The TL;DR is Matrix was using an educational implementation of a thing, that explicitly said to not use it in production, and didn’t do anything about that for seven years until Soatok found it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://furry.engineer/@senil888/112964632462775370&quot;&gt;Here’s a link to my first of the reply chain directly talking about that.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;i-kind-of-worked-in-the-power-industry&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/critical-infra-and-e2ee/#i-kind-of-worked-in-the-power-industry&quot;&gt;I (kind of) worked in the power industry.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The main project I had with my (now former) company in my short time there was for a hydro dam up in the Idaho panhandle, in Boundary County - not joking, it’s called that. That’s not too important, though.&lt;/p&gt;
&lt;p&gt;What is important is that this fairly small hydro dam, which can output about 4 megawatts during peak spring runoff, helps power the nearby towns via a city-run utility. While it’s not the end of the world for the dam to be offline, them being offline means the utility has to buy even more power than if it was running. Which costs the city a fair bit more money than running the dam themselves, because you have the power generation places that need their money to run their facilities, the transmission companies that need to fund their projects, and on and on and on.&lt;/p&gt;
&lt;p&gt;So, it’s pretty important to help them get back on their feet. And we had a big task - we were to replace their old Allen-Bradley PLCs with our own, and toss in a SCADA system too.&lt;/p&gt;
&lt;p&gt;The SCADA system is fairly straightforward when it comes to data inputs - I could just take the data, label it, maybe do some conversions as-needed, and toss it up the chain. For this system, it went from generator-connected programmable logic controller (PLC) to a beefier controller running more sophisticated software, as well as a basic HMI, up to a control house computer that ran a COPA-DATA Zenon HMI that we also designed and developed. &lt;strong&gt;We were responsible for a lot of stuff.&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ScaredSenil.png&quot; alt=&quot;Senil with his hands on his head, mouth wide open in fear. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil with his hands on his head, mouth wide open in fear. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;the-controls&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/critical-infra-and-e2ee/#the-controls&quot;&gt;The Controls&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The hard part comes in when we actually add in the controls. Which is, y’know, important since we’re replacing everything their old PLCs did with our own system and solution. Which meant we needed reference code, since the customer knows their system the best (mostly, we talked with the operators who knew how to run the thing, but didn’t 100% know the backbones). What we got? Was in ladder logic. Which looks very different to structured text, which is probably what you think of when I say “what does a programming language look like typed out?” So… not only did we need to re-create that, we had to “translate” it into ST as well. Fun!&lt;/p&gt;
&lt;p&gt;This is where the controls joy comes in. Each PLC acts mostly the same when it comes to general operations. These outputs are for lights, this output needs to do this thing and get this signal for some time back before another thing can even think about asserting, etc.&lt;/p&gt;
&lt;p&gt;Spinning up a hydro generator takes a decent bit of time. Not forever mind you, but there’s a lot of steps involved. First you need to get water to, well, the generator’s turbine inlet. But you can’t just send water straight from the turbine inlet valve (TIV) to the turbines. You need to balance the water pressures between everything because if you don’t? Congratulations, you just broke the turbine and this generator has to be rebuilt.&lt;/p&gt;
&lt;p&gt;Once the TIV bypass does its thing for a while, we can actually open the TIV and start to send water to the turbine. Once water is getting to the turbine, we open up the wicket gates - which actually finally let water to the turbines. They’re controllable, so we can define exactly how much water gets to flow, and thus how much power a generator actually outputs.&lt;/p&gt;
&lt;p&gt;Then it’s the usual generator stuff. Get the thing up to speed and, once it’s up to speed and stays there for a little while, ya gotta sync the generator phases and frequency to the grid phases and frequency. If the phase angles are off too much, you end up kicking the generator forwards or backwards when the breaker closes to the grid. That can be violent, and harm the generator over time - or outright break it if the phase angle is off by too much. So we need that to be as precise as possible, and to close as soon as we’re confident it’ll safely kick in without breaking anything. So that’s the gist of the start-up sequence at the dam. All is well and good there.&lt;/p&gt;
&lt;h2 id=&quot;edge-cases-cannot-exist&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/critical-infra-and-e2ee/#edge-cases-cannot-exist&quot;&gt;“Edge cases cannot exist.”&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However. There’s a fail over system with the Zenon HMI. See, the two powerhouse controllers gather all available data in this system as a form of redundancy - not via the physical network, but via the hardware. This is fine when it comes to inputs, since that version of Zenon can only listen to one controller at a time, but we run into problems with outputs. The “Zenon only talks to one controller at a time” becomes the enemy, in a way.&lt;/p&gt;
&lt;p&gt;While realistically rare, or outright “would never happen”, it is still technically possible for an operator to send a binary output command or update an analog setting &lt;em&gt;while Zenon changes which controller it listens to&lt;/em&gt;. This can be for a variety of reasons - the operator told the controllers to switch over, Zenon lost access to one controller so it’s starting to talk to the other (a process that takes a bit of time), etc. &lt;strong&gt;The absolute last thing we need is for a command to be sent twice during this switchover,&lt;/strong&gt; because output data cannot be shared between the two because of the whole “Zenon can only talke to one controller at a time.”&lt;/p&gt;
&lt;p&gt;Our first main problem was fixing this control switchover problem, brought upon the very nature of our design scheme and how Zenon works (which I think they’ve fixed since that version, but I never worked on Zenon myself). Again, we have to account for every possible problem which means figuring out how to make sure a command sent from Zenon “syncs” between devices. The solution I came up with was pretty clunky, to be frank, but it worked - I literally just told the controller that knew it was talking to Zenon to periodically pulse the analog setpoint to the other controller, so it at least knew what was going on and could report back to Zenon appropriately.&lt;/p&gt;
&lt;p&gt;What ended up happening was one generator - which was being rebuilt - wouldn’t report how far the wicket gates were open. I shouldn’t need to say that “this is bad” because if we can’t tell how far the wickets are open, &lt;strong&gt;we have no idea how much water, if any, is getting to the turbine proper.&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/ConfusedSenil.png&quot; alt=&quot;Senil dazed and drooling, with a loading icon above him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil dazed and drooling, with a loading icon above him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The sensor was a hall effect one, made of steel. There is a window above it. This is a dam, close to the river and a waterfall. I hope you can guess what the problem is. Hint, it involves steel not liking moisture. We cleaned out a COPIOUS amount of rust, and hey look the sensor was finally working again, we got wicket gate data. So we could finally spin up this generator. Which we were able to do…&lt;/p&gt;
&lt;p&gt;Except, y’know. Problem time. The generator was vibrating, and vibrating a LOT. Consistently. Every time it started up, some code I adapted from the original ladder logic would run and trigger an emergency stop. The code runs on the controller directly talking to the generator, quietly monitoring vibration data. If ANY of the four input sensors report values over some threshold for more than a few seconds? Emergency stop time.&lt;/p&gt;
&lt;p&gt;So something is still wrong with this generator. We trust the sensors since we’re getting good data as the generator spins up, it just… shakes too much. We actually temporarily disabled the logic that trips the generator to monitor its behavior if it didn’t e-stop in time. It kept vibrating, more and more. It would probably shake itself apart if you let it keep going. It also did it consistently, and it was one bearing’s sensor that was consistently tripping. &lt;em&gt;(aside: that bearing had also seized up TWICE during prior trips to commission this generator. It also did it again after we left the site. That bearing did not like existing, apparently.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The only reason we were able to check this case is because what I had written worked and we knew it worked. In part because that same logic was on three other generators, but we were able to accidentally prove that hey, if this happens, it’ll trigger an emergency stop no problem. It turned out the people rebuilding the generator didn’t balance the flywheel when they fixed the bearing before, so oops! You can’t spin that thing up just yet.&lt;/p&gt;
&lt;h2 id=&quot;remember-lives-are-at-stake&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/critical-infra-and-e2ee/#remember-lives-are-at-stake&quot;&gt;Remember: Lives are at stake.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Imagine how bad this whole thing could’ve been if we weren’t as rigorous as we were. Generators could’ve broken apart. People could’ve been hurt. Expensive equipment could’ve gotten seriously damaged. Hell, it might not even have started up because of how much other equipment we had to interface with that we couldn’t investigate ourselves. That client trusted us to get their dam up and running with new hardware that would treat them well for many years to come, and to build a partnership with a firm they could trust. In the end, we delivered and they’re supposedly working on more (smaller) projects with them.&lt;/p&gt;
&lt;p&gt;I don’t know the specifics, but BECAUSE we were persistent in making sure every edge case we could think of was resolved, and fixing everything in real-time as problems came up (and making sure our fixes wouldn’t introduce NEW problems) we were able to tell them “you can trust us.” Because ultimately, &lt;strong&gt;“no one is obligated to buy from you. You can go out of business tomorrow if everyone decides to never work with you.”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(aside again: this is something I try to tell anyone who is running any kind of small business. Nobody is obliged to commission you, to hire you, to whatever. It’s on you to stay on top of things and make people want to work with you, and keep working with you.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;this-is-still-about-matrix-trust-me&quot; tabindex=&quot;-1&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://blog.senil.me/critical-infra-and-e2ee/#this-is-still-about-matrix-trust-me&quot;&gt;This is still about Matrix, trust me.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It’s largely because of my experience with the hydro project that I just can’t trust companies, projects, and teams that hide vulnerabilities and failure points and hope nobody finds them. It makes me question how many they actually have hidden when someone does find one. How many defects does their thing have, if some of the most obvious ones are let through? If this obvious error got through their QA checks, what else is lying under the hood that we don’t know about yet?&lt;/p&gt;
&lt;figure&gt;&lt;a href=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot;&gt;&lt;img src=&quot;https://blog.senil.me/assets/images/stickers/AngrySenil.png&quot; alt=&quot;Senil cracking his knuckles with flames behind him. Art by [Dragonjourney](https://x.com/Dragonjourney)&quot; loading=&quot;lazy&quot; style=&quot;&quot; /&gt;&lt;/a&gt;&lt;figcaption&gt;Senil cracking his knuckles with flames behind him. Art by &lt;a href=&quot;https://x.com/Dragonjourney&quot;&gt;Dragonjourney&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Can I trust this system to be robust enough in the event of a catastrophic failure?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I know cryptography - E2EE in particular - isn’t remotely comparable to what I’ve worked on, but what I’ve worked on is super important. Lives are at stake with these projects. I need to be confident that what I do isn’t going to hurt people. That it isn’t going to break equipment. That it isn’t going to fail in two years because of an oversight, &lt;em&gt;or something we knew about and ignored because it’s “technically impossible”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I need projects in critical fields that take themselves seriously to ACT like lives are at stake, because maybe some are.&lt;/p&gt;
&lt;p&gt;But if you’re taking yourself seriously, in something as important as cryptography, something that is increasingly important every single day in every field - critical infrastructure included - you need to act like lives are at stake if you fuck up.&lt;/p&gt;
&lt;p&gt;I know some of this shit is just a chat protocol, “why are you so pressed” blah blah blah. A lot of people herald E2EE services as a secure way to also talk about protests and labor organization without significant risk of getting caught. Of course, if you don’t regularly use E2EE normally the fact you use it might implicate you. When it comes to organizing? If a court requests data from some service, as little data as possible should be sent out. Because people get jailed or imprisoned for organizing. Those lives are on the line if your system isn’t up to snuff.&lt;/p&gt;
&lt;p&gt;This isn’t to say “just pick any E2EE service, it’s fine” because it’s not fine to do that. People need a service they can trust, that’s reliable, that takes security seriously and does everything in their power to make sure what they do is as secure as possible. From what they know is a fail point, and what they later find out is a new possible fail point. People need services they can trust that has their best interests in mind. Clients need businesses they can trust that can hold up their end of the contract and deliver a quality solution that fits their client’s needs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why should anything like this be any different?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;People die when we fuck up in the power industry. We can’t allow that to happen, ever. Our trust is built upon proving a track record of quality work that is done timely. Work that stands the test of time as systems operate. I know a lot of shit is nothing compared to critical infrastructure, but I wish more folks took it remotely as seriously as people in my industry have to. Because if we fuck up, people get hurt. People lose power. Facilities get damaged. Industry stops. And, ultimately…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;If the power goes out… so does everything else.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
</feed>
